--[[
Conky, a system monitor, based on torsmo

Any original torsmo code is licensed under the BSD license

All code written since the fork of torsmo is licensed under the GPL

Please see COPYING for details

Copyright (c) 2004, Hannu Saransaari and Lauri Hakkarainen
Copyright (c) 2005-2018 Brenden Matthews, Philip Kovacs, et. al. (see AUTHORS)
All rights reserved.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
]]

local json = require('JSON')

conky.config = {
    out_to_console = false,
    out_to_stderr = false,
    extra_newline = false,
    background = false,
    own_window = true,
    own_window_class = 'Conky',
    own_window_type = 'desktop',
    alignment = 'top_right',

    cpu_avg_samples = 2,
    diskio_avg_samples = 2,
    net_avg_samples = 2,
    no_buffers = true,
    use_xft = true,
    stippled_borders = 0,
    update_interval = 10.0,
    uppercase = false,
    use_spacer = 'none',

    format_human_readable = true,

    gap_x = 60,
    gap_y = 70,
    minimum_height = 5,
    minimum_width = 600,
    maximum_width = 600,
    border_outer_margin = 20,

    own_window_argb_visual = true,
    own_window_argb_value = 224,
    font = 'DejaVu Sans Mono-10',
    border_width = 1,
    default_color = 'white',                    -- text
    default_outline_color = 'white',
    default_shade_color = 'white',
    draw_borders = false,
    draw_graph_borders = true,
    draw_outline = false,
    draw_shades = false,
    show_graph_scale = false,
    show_graph_range = false,
    -- color1 = '055A5A',                          -- title
    -- color2 = '415714',                          -- section
    color1 = '7B9F35',                          -- title
    color2 = '5D1616',                          -- section
    color3 = '919191',                          -- details
    color9 = '608D08',                          -- OK value for graphs. Hardcoded for graphs that can't take color reference.
    color0 = '970808',                          -- BAD value for graphs. Hardcoded for graphs that can't take color reference.
    template0 = [[${color1}\1${color}]],                                                  -- title
    template1 = [[${font 'DejaVu Sans Mono-18:style=bold'}${color2}\1${color}${font}]],   -- section

    lua_load = "~/.config/conky/awesome_wrapper.lua",
    lua_draw_hook_pre = "conky_update_awesome"
}
-- for some reason even though maximum_width is 600, actual width is 650
-- all gotos are calculated based on 650

local lsblk_stdout = io.popen("lsblk --json --output type,path,model,mountpoint --sort mountpoint")
local lsblk_json = lsblk_stdout:read("*all")
local lsblk = json:decode(lsblk_json)

local disks_text = ""
for _, disk in pairs(lsblk["blockdevices"]) do
  if disk["type"] == "disk" then
    local name = disk["model"]:gsub(" ", "\\ ")
    local path = disk["path"]
    disks_text = disks_text .. [[${template0 ]] .. name .. [[}
${goto 37}${template0 Read:} ${diskio_read ]] .. path .. [[}             ${goto 342}${template0 Write:} ${diskio_write ]] .. path .. [[}
${goto 37}${diskiograph_read ]] .. path .. [[ 60,270 608D08 970808 -t}   ${goto 342}${diskiograph_write ]] .. path .. [[ 60,270 608D08 970808 -t}
]]
  end
end

local partitions_text = ""
for _, part in pairs(lsblk["blockdevices"]) do
  local path = part["mountpoint"]
  if path and path ~= "[SWAP]" then
    partitions_text = partitions_text .. [[${template0 ]] .. path .. [[} ${color3}${fs_used ]] .. path .. [[}/${fs_size ]] .. path .. [[}
${fs_bar 6 ]] .. path .. [[}${color}
]]
  end
end

conky.text = [[
${template0 $nodename}                                ${goto 342}${template0 $kernel}
${template0 Uptime:} $uptime                          ${goto 342}${template0 Load:} $loadavg

${template1 Hardware\ Load}
${goto 37}${template0 CPU:} $cpu%                     ${goto 342}${template0 RAM:} $memperc%   ${template0 Swap:} $swapperc%
${goto 37}${cpubar cpu0 6,270}                        ${goto 342}${membar 6,270}
${goto 37}${cpugraph 60,270 608D08 970808 -t}         ${goto 342}${memgraph 60,270 608D08 970808 -t}
${goto 37}${template0 Frequency:} ${freq_g}GHz        ${goto 342}${template0 Used:}     ${goto 470}$mem / $memmax
                                                      ${goto 342}${template0 +Buffers:} ${goto 470}$memwithbuffers / $memmax
                                                      ${goto 342}${template0 Swap:}     ${goto 470}$swap / $swapmax

${template1 Disks}
]] .. disks_text .. [[
${template1 Hardware\ Monitor}
${template0 CPU}  ${alignr}${hwmon temp 2}Â°C

${template1 Network}
${goto 37}${template0 Download:} ${downspeed enp33s0}                ${goto 342}${template0 Upload:} ${upspeed enp33s0}
${goto 37}${downspeedgraph enp33s0 60,270 608D08 970808 -t}          ${goto 342}${upspeedgraph enp33s0 60,270 608D08 970808 -t}
${goto 37}${template0 Total:} ${totaldown enp33s0}                   ${goto 342}${template0 Total:} ${totalup enp33s0}

${template1 File\ Systems}
]] .. partitions_text .. [[
${template1 Processes}
${template0 Total:} $processes  ${template0 Running:} $running_processes
${color1}Name              PID   CPU%   MEM%${color3}
${top name 1} ${top pid 1} ${top cpu 1} ${top mem 1}
${top name 2} ${top pid 2} ${top cpu 2} ${top mem 2}
${top name 3} ${top pid 3} ${top cpu 3} ${top mem 3}
${top name 4} ${top pid 4} ${top cpu 4} ${top mem 4}$color]]
